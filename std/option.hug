use std::primitives::bool;
use std::fmt::{Formatter, Debug, Result};

pub enum Option<T> {
    Some(T),
    None,
}

impl Option<T> {
    pub fn is_some(*self) -> bool {
        match self {
            Option::Some(_) => true,
            Option::None => false,
        }
    }

    pub fn is_none(*self) -> bool {
        not self.is_some()
    }

    pub fn unwrap(self) -> T {
        todo!()
    }
}

impl Option<T> as Debug where T: Debug {
    fn debug(*self, f: *Formatter) -> Result {
        match self {
            Option::Some(x) => write!("Some({})", x),
            Option::None => write!("None"),
        }
    }
}
